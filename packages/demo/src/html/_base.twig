{% extends '_main.twig' %}

{% block head_style %}
{% endblock %}

{% block footer_inner__ %}
    <div class="footer--end px2">
        <p class="center">
            Â© 2015 - 2022
            <a href="https://bemit.codes">bemit</a>
        </p>
    </div>
    <script>
        let popup = null;
        let selectorInspectState = { inspect: false };
        let toggleInspectBtn = document.getElementById('toggle-inspect');
        let ignoreSystemClasses = ['bg-grey', 'bg-grey-raw', 'bg-blue', 'demo-title', 'copy-success'];

        function isSelectorInspect () {
            return selectorInspectState.inspect;
        }

        function toggleInspectFunction () {
            let inspect = isSelectorInspect();
            selectorInspectState.inspect = !inspect;
            window.localStorage.setItem('selector-inspect', selectorInspectState.inspect ? '1' : '0');
            if(selectorInspectState.inspect) {
                toggleInspectBtn.innerText = 'Disable Inspect';
                toggleInspectBtn.classList.add('btn-danger');
                if(popup) {
                    popup.remove();
                }
            } else {
                toggleInspectBtn.innerText = 'Enable Inspect';
                toggleInspectBtn.classList.remove('btn-danger');
            }
        }

        if(window.localStorage.getItem('selector-inspect') * 1) {
            selectorInspectState.inspect = true;
            toggleInspectBtn.innerText = 'Disable Inspect';
            toggleInspectBtn.classList.add('btn-danger');
        }

        toggleInspectBtn.addEventListener('click', toggleInspectFunction);

        function doCopy (evt) {
            let tmp_inp = document.createElement('textarea');
            tmp_inp.value = evt.target.parentNode.parentNode.querySelector('.classes').innerText;
            tmp_inp.setAttribute('readonly', '');
            tmp_inp.style = { position: 'absolute', left: '-9999px' };
            document.body.appendChild(tmp_inp);
            tmp_inp.select();
            document.execCommand('copy');
            document.body.removeChild(tmp_inp);

            let tmp_success = document.createElement('span');
            tmp_success.classList.add('copy-success');
            tmp_success.innerText = 'Copied to clipboard!';
            evt.target.classList.add('active');
            evt.target.appendChild(tmp_success);

            setTimeout(() => {
                evt.target.classList.remove('active');
                evt.target.removeChild(tmp_success);
            }, 1200);
        }

        function getParentClass (element) {
            if(element.classList.contains('demo')) return undefined;
            let classes = '';

            if(element && element.tagName && element.tagName !== 'DIV') {
                classes = element.tagName.toLowerCase();
            }

            if(element && element.dataset.inspectIgnore !== '1' && element.classList && element.classList.length) {
                let classesToJoin = Array.from(element.classList).filter(function(elem) {
                    return ignoreSystemClasses.indexOf(elem) === -1;
                });
                if(classesToJoin.length > 0) {
                    classes = classes + '.' + classesToJoin.join('.');
                }
            }
            if(element.parentNode) {
                let parentClass = getParentClass(element.parentNode);
                classes = (parentClass ? parentClass + (classes ? ' > ' : '') : '') + classes;
            }

            return classes;
        }

        let demoNodes = Array.from(document.querySelectorAll('.demo'));
        demoNodes.forEach(function(node) {
            node.addEventListener('mousemove', function(e) {
                if(popup) {
                    popup.remove();
                }
                if(!(window.localStorage.getItem('selector-inspect') * 1)) {
                    return;
                }
                let x = e.clientX;
                let y = e.clientY;
                let elementMouseIsOver = document.elementFromPoint(x, y);

                let classes = getParentClass(elementMouseIsOver);
                if(!classes) {
                    return;
                }

                popup = document.createElement('span');
                popup.style.position = 'fixed';
                popup.style.zIndex = '100';
                popup.style.left = x + 'px';
                popup.style.top = y + 'px';
                popup.style.right = '4px';
                popup.style.wordBreak = 'break-word';
                popup.style.padding = '6px 9px';
                popup.style.marginLeft = '4px';
                popup.classList.add('copy-overlay');
                popup.classList.add('o');
                popup.classList.add('o-divider');
                popup.classList.add('font-family-mono');

                let copy = document.createElement('button');
                copy.classList.add('px1');
                copy.classList.add('mr1');
                copy.classList.add('btn');
                copy.innerText = 'ðŸ“„';
                copy.title = 'Copy to Clipboard';
                copy.alt = 'Copy to Clipboard';
                copy.addEventListener('click', doCopy);
                popup.appendChild(copy);

                let end = document.createElement('button');
                end.classList.add('px1');
                end.classList.add('mr1');
                end.classList.add('btn');
                end.innerText = 'â­•';
                end.title = 'End Inspect';
                end.alt = 'End Inspect';
                end.addEventListener('click', toggleInspectFunction);
                popup.appendChild(end);

                let label = document.createElement('span');
                label.classList.add('classes');
                label.classList.add('inline-block');
                label.classList.add('ml1');
                label.innerText = classes;
                popup.appendChild(label);

                if(popup.innerText) {
                    document.body.appendChild(popup);
                }
            });
        });
        const collapse = (toggles) => {
            const unsub = toggles.map((node) => {
                const handleToggle = (target) => {
                    const nextSibling = target.nextElementSibling;
                    if(!nextSibling) return;
                    if(nextSibling.classList.contains('closed')) {
                        if(nextSibling.style.height !== '0') {
                            nextSibling.style.height = '0';
                        }
                        nextSibling.classList.remove('closed');
                        nextSibling.style.height = nextSibling.scrollHeight + 'px';
                    } else {
                        nextSibling.classList.add('closed');
                        nextSibling.style.height = '0';
                    }
                };
                const onClick = (e) => {
                    handleToggle(e.target);
                };
                const onKeyPress = (e) => {
                    if(e.key === 'Enter') {
                        e.preventDefault();
                        e.stopPropagation();
                        handleToggle(e.target);
                    }
                };
                node.addEventListener('click', onClick);
                node.addEventListener('keypress', onKeyPress);
                return () => {
                    node.removeEventListener('click', onClick);
                    node.removeEventListener('keypress', onKeyPress);
                };
            });
            const onResize = () => {
                toggles.forEach((toggle) => {
                    const nextSibling = toggle.nextElementSibling;
                    if(!nextSibling) return;
                    if(!nextSibling.classList.contains('closed')) {
                        nextSibling.style.height = nextSibling.scrollHeight + 'px';
                    }
                });
            };
            window.addEventListener('resize', onResize);
            return () => {
                unsub.forEach(u => u());
                window.removeEventListener('resize', onResize);
            };
        };
        collapse(
                Array.from(document.querySelectorAll('[data-toggle]'))
        );
        const toc = document.querySelector('[data-toc="embed"]');
        const titles = Array.from(document.querySelectorAll('.demo-title:not([data-toc="ignore"])'))
                .map(title => {
                    const tagName = Number(title.localName.slice(1));
                    const text = title.innerText;
                    title.id = text.toLowerCase()
                            .replace(/[ \/,:\\'`Â´"Â°~]/g, '-')
                            .replace(/--/g, '-').replace(/--/g, '-')
                            .slice(0, 25);
                    return {
                        label: text,
                        id: title.id,
                        level: tagName - 1,
                    };
                });
        toc.innerHTML = titles.map(title => `<li style="margin-left: ${title.level * 16}px" "><a href="#${title.id}">${title.label}</a></li>`).join('');

        (() => {
            const initialState = { current: undefined };
            const cssVarHead = document.querySelector('[data-cssvars="source"]');
            if(!cssVarHead) return;
            const cssVarInput = document.querySelector('[data-cssvars="input"]');
            if(!cssVarInput) return;
            const cssVarReset = document.querySelector('[data-cssvars="reset"]');
            const cssVarSubmit = document.querySelector('[data-cssvars="submit"]');
            initialState.current = cssVarHead.innerText;
            cssVarInput.value = cssVarHead.innerText;
            cssVarReset.addEventListener('click', () => {
                cssVarHead.innerText = initialState.current;
                cssVarInput.value = initialState.current;
            });
            cssVarSubmit.addEventListener('click', () => {
                cssVarHead.innerText = cssVarInput.value;
            });
        })();
    </script>
{% endblock %}
